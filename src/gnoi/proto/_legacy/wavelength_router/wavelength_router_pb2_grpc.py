# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from gnoi.proto._legacy.wavelength_router import wavelength_router_pb2 as gnoi_dot_proto_dot___legacy_dot_wavelength__router_dot_wavelength__router__pb2


class WavelengthRouterStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AdjustPSD = channel.unary_stream(
                '/gnoi.optical.WavelengthRouter/AdjustPSD',
                request_serializer=gnoi_dot_proto_dot___legacy_dot_wavelength__router_dot_wavelength__router__pb2.AdjustPSDRequest.SerializeToString,
                response_deserializer=gnoi_dot_proto_dot___legacy_dot_wavelength__router_dot_wavelength__router__pb2.AdjustPSDResponse.FromString,
                )
        self.CancelAdjustPSD = channel.unary_unary(
                '/gnoi.optical.WavelengthRouter/CancelAdjustPSD',
                request_serializer=gnoi_dot_proto_dot___legacy_dot_wavelength__router_dot_wavelength__router__pb2.AdjustPSDRequest.SerializeToString,
                response_deserializer=gnoi_dot_proto_dot___legacy_dot_wavelength__router_dot_wavelength__router__pb2.CancelAdjustPSDResponse.FromString,
                )
        self.AdjustSpectrum = channel.unary_stream(
                '/gnoi.optical.WavelengthRouter/AdjustSpectrum',
                request_serializer=gnoi_dot_proto_dot___legacy_dot_wavelength__router_dot_wavelength__router__pb2.AdjustSpectrumRequest.SerializeToString,
                response_deserializer=gnoi_dot_proto_dot___legacy_dot_wavelength__router_dot_wavelength__router__pb2.AdjustSpectrumResponse.FromString,
                )
        self.CancelAdjustSpectrum = channel.unary_unary(
                '/gnoi.optical.WavelengthRouter/CancelAdjustSpectrum',
                request_serializer=gnoi_dot_proto_dot___legacy_dot_wavelength__router_dot_wavelength__router__pb2.AdjustSpectrumRequest.SerializeToString,
                response_deserializer=gnoi_dot_proto_dot___legacy_dot_wavelength__router_dot_wavelength__router__pb2.CancelAdjustSpectrumResponse.FromString,
                )


class WavelengthRouterServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AdjustPSD(self, request, context):
        """AdjustPSD performs a power spectral density (PSD) adjustment on an optical
        DWDM line system port.

        This RPC's initial message triggers adjustments. The target should validate
        the request, and immediately begin the adjustment as long as another
        adjustment is not already running. As this RPC may take multiple minutes,
        the state should be regularly streamed to the client. The operation should
        be completed on the device regardless of the state of the RPC channel to
        the initiating client. A client that becomes disconnected during an
        operation can reconnect, requesting the same operation, and receive status
        updates this way. There is no means by which an adjustment that has been
        triggered by a client can be cancelled unless the CancelAdjustPSD RPC is
        used.
        DEPRECATED, use AdjustSpectrum.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelAdjustPSD(self, request, context):
        """CancelAdjustPSD cancels an in-progress AdjustPSD request. If an
        adjustment is not being performed for the provided request, then the RPC
        should return successfully.
        DEPRECATED, use CancelAdjustSpectrum.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AdjustSpectrum(self, request, context):
        """AdjustSpectrum performs a spectrum power adjustment on an optical
        DWDM line system port.

        This RPC's initial message triggers adjustments. The target should validate
        the request, and immediately begin the adjustment as long as another
        adjustment is not already running. As this RPC may take multiple minutes,
        the state should be regularly streamed to the client. The operation should
        be completed on the device regardless of the state of the RPC channel to
        the initiating client. A client that becomes disconnected during an
        operation can reconnect, requesting the same operation, and receive status
        updates this way. There is no means by which an adjustment that has been
        triggered by a client can be cancelled unless the CancelAdjustSpectrum
        RPC is used.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelAdjustSpectrum(self, request, context):
        """CancelAdjustSpectrum cancels an in-progress AdjustSpectrum request. If an
        adjustment is not being performed for the provided request, then the RPC
        should return successfully.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WavelengthRouterServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AdjustPSD': grpc.unary_stream_rpc_method_handler(
                    servicer.AdjustPSD,
                    request_deserializer=gnoi_dot_proto_dot___legacy_dot_wavelength__router_dot_wavelength__router__pb2.AdjustPSDRequest.FromString,
                    response_serializer=gnoi_dot_proto_dot___legacy_dot_wavelength__router_dot_wavelength__router__pb2.AdjustPSDResponse.SerializeToString,
            ),
            'CancelAdjustPSD': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelAdjustPSD,
                    request_deserializer=gnoi_dot_proto_dot___legacy_dot_wavelength__router_dot_wavelength__router__pb2.AdjustPSDRequest.FromString,
                    response_serializer=gnoi_dot_proto_dot___legacy_dot_wavelength__router_dot_wavelength__router__pb2.CancelAdjustPSDResponse.SerializeToString,
            ),
            'AdjustSpectrum': grpc.unary_stream_rpc_method_handler(
                    servicer.AdjustSpectrum,
                    request_deserializer=gnoi_dot_proto_dot___legacy_dot_wavelength__router_dot_wavelength__router__pb2.AdjustSpectrumRequest.FromString,
                    response_serializer=gnoi_dot_proto_dot___legacy_dot_wavelength__router_dot_wavelength__router__pb2.AdjustSpectrumResponse.SerializeToString,
            ),
            'CancelAdjustSpectrum': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelAdjustSpectrum,
                    request_deserializer=gnoi_dot_proto_dot___legacy_dot_wavelength__router_dot_wavelength__router__pb2.AdjustSpectrumRequest.FromString,
                    response_serializer=gnoi_dot_proto_dot___legacy_dot_wavelength__router_dot_wavelength__router__pb2.CancelAdjustSpectrumResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'gnoi.optical.WavelengthRouter', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class WavelengthRouter(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AdjustPSD(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/gnoi.optical.WavelengthRouter/AdjustPSD',
            gnoi_dot_proto_dot___legacy_dot_wavelength__router_dot_wavelength__router__pb2.AdjustPSDRequest.SerializeToString,
            gnoi_dot_proto_dot___legacy_dot_wavelength__router_dot_wavelength__router__pb2.AdjustPSDResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelAdjustPSD(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gnoi.optical.WavelengthRouter/CancelAdjustPSD',
            gnoi_dot_proto_dot___legacy_dot_wavelength__router_dot_wavelength__router__pb2.AdjustPSDRequest.SerializeToString,
            gnoi_dot_proto_dot___legacy_dot_wavelength__router_dot_wavelength__router__pb2.CancelAdjustPSDResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AdjustSpectrum(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/gnoi.optical.WavelengthRouter/AdjustSpectrum',
            gnoi_dot_proto_dot___legacy_dot_wavelength__router_dot_wavelength__router__pb2.AdjustSpectrumRequest.SerializeToString,
            gnoi_dot_proto_dot___legacy_dot_wavelength__router_dot_wavelength__router__pb2.AdjustSpectrumResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelAdjustSpectrum(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gnoi.optical.WavelengthRouter/CancelAdjustSpectrum',
            gnoi_dot_proto_dot___legacy_dot_wavelength__router_dot_wavelength__router__pb2.AdjustSpectrumRequest.SerializeToString,
            gnoi_dot_proto_dot___legacy_dot_wavelength__router_dot_wavelength__router__pb2.CancelAdjustSpectrumResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
